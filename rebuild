#!/bin/sh -eu

# trap _cleanup EXIT
# _cleanup() { [ -d "${_tmp:-}" ] && rm -rf "$_tmp"; }

# _dir="${XDG_RUNTIME_DIR:-${TMP:-/tmp}}"
# _tmp="$(mktemp -d "${_dir}/${0##*/}.XXXXXX" 2>/dev/null || true)"

# if [ -d "${_tmp:-}" ]; then
# 	exec 3>"$_tmp/log"
# else
# 	exec 3>/dev/null
# fi

alias Q='>/dev/null'

_err() { local c="$1"; shift; echo >&2 "${0##*/}: $*"; exit "$c"; }

MARK() { touch -m -t 0001010000 "$1"; }
# MARK() { rm -fv "$1"; }

_cdeps() { 
	shift # target
 	for d in $(${CPP:-cpp} ${CFLAGS:-} -MM -MG "$@" | tr -d '\n\\'); do
		[ -e "$d" ] && echo "$d"
	done
}

_yargs() {
	while read x; do set -- "$@" "$x"; done
	"$@"
}

RUN() {
	local msg="$1"; shift
	if Q "$@"; then echo "$msg"; else _err $? "$*"; fi
}

OK() {
	local t="$1"; shift
	[ -e "$t" ] || { MARK "$t"; return 1; }
	for d; do
		# [ -e "$d" ] || _err 2 "not found: $d" # TODO
		[ ! -e "$d" -o "$t" -ef "$d" -o "$t" -nt "$d" ] || { MARK "$t"; return 1; }
	done
}

CK() { _cdeps "$@" | _yargs OK "$@"; }

_cc() { RUN "c $1" ${CC:-cc} ${CFLAGS:-} -c -o "$@"; }
_ld() { RUN "l $1" ${CC:-cc} ${CFLAGS:-} ${LDFLAGS:-} -o "$@"; }

LD() { OK "$@"      || _ld "$@"; }
CC() { CK "$@"      || _cc "$@"; }
CP() { OK "$2" "$1" || { RUN "+ $2" cp "$1" "$2"; } }

/bin/sh -n ./buildfile
. ./buildfile

Q command -v clean || clean() { RUN '- build/' rm -rf build/; } 

[ $# -ne 0 ] || set -- build

for arg; do
	Q command -v "$arg" || _err 8 "no such target: $arg"
	eval "$arg"
done

